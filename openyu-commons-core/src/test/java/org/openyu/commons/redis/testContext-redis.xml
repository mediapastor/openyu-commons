<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			 http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">

	<!-- serializer-->
	<bean
		id="stringRedisSerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	<bean
		id="kryoRedisSerializer"
		class="org.openyu.commons.redis.KryoRedisSerializer" />
	<bean
		id="jdkRedisSerializer"
		class="org.openyu.commons.redis.JdkRedisSerializer" />
		
	<!-- common 
	<bean
		id="commonJedisPoolConfig"
		class="redis.clients.jedis.JedisPoolConfig"
		p:maxTotal="10"
		p:minIdle="1"
		p:maxWaitMillis="60000"
		p:testOnBorrow="true"
		p:testOnReturn="true" />

	<bean
		id="commonJedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:hostName="${redis.ip}"
		p:port="${redis.port}"
		p:password="${redis.password}"
		p:database="${redis.database}"
		p:poolConfig-ref="commonJedisPoolConfig" />

	<bean
		id="commonRedisTemplate"
		class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="commonJedisConnectionFactory"
		p:defaultSerializer-ref="kryoRedisSerializer"
		p:keySerializer-ref="stringRedisSerializer" />

	<bean
		id="commonCacheManagerTarget"
		class="org.springframework.data.redis.cache.RedisCacheManager"
		c:redisOperations-ref="commonRedisTemplate"
		p:defaultExpiration="${redis.defaultExpiration}" />

	<bean
		id="commonCacheManager"
		class="org.springframework.cache.support.CompositeCacheManager">
		<property name="cacheManagers">
			<list>
				<ref bean="commonCacheManagerTarget" />
			</list>
		</property>
		<property
			name="fallbackToNoOpCache"
			value="true" />
	</bean>

	<cache:annotation-driven cache-manager="commonCacheManager" />
	-->	
	

</beans>